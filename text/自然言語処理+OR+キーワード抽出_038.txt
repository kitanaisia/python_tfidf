
自然言語処理研究室の研究内容
このページでは本研究室で行われている研究を紹介します。
このページの読者としては、本研究室への配属を考えている学部学生や、外部から本研究室に所属しようと考えている学生(大学院学生)を想定しており、一般向けに書いています。そのため正確でない部分もあるかもしれません。研究者の方でコメントあればぜひメール下さい。もちろん学生からの質問のメールも歓迎です。よろしく。
本研究室の研究内容は3つの軸で分類できます。「自然言語処理」、「機械学習・統計学」、「Web 応用」です。それぞれ密接に関連しているのですが、キーワード的にはこの3つです。ただ3つの
and というわけではなく、and や or の組み合わせです。
(1) 自然言語処理
私の研究分野を一言でいえば、これです。自然言語処理の研究も範囲が広いのですが、学生が研究をする場合、自然言語処理であれば何でもよいです。私自身は自然言語処理の個々の問題を(2)で紹介する機械学習や統計学の手法を利用して解決するという研究を主にやっています。自然言語を一種の自然現象として捉えれば、面白いように機械学習や統計学の手法が使えて、出てくる結果も示唆に富むものなので、面白いのでやっています。
以下は具体的なタスクです。
(1.1) 語義の曖昧性解消
自然言語の単語は通常複数の意味を持っています。「ボタン」であれば「シャツのボタン」「スイッチのボタン」「花のボタン」と色々あります。テキストに対して何らかの知的処理を行おうとした場合、この語義の曖昧性の問題が起こってきます。語義の曖昧性解消というのは、文中に出現した曖昧な語義を持つ単語の語義を決定する処理のことです。
通常は帰納学習の手法を利用して高い精度でこの問題を解決できるのですが、まだいくつか問題も残っています。1つは帰納学習で利用する訓練事例の自動構築、あるいは少ない訓練事例からの帰納学習の方法です。結局、(2)で紹介する半教師有り学習やクラスタリングの手法をこの問題に応用するという感じです。
ただもう一つ興味あることとして単語の語義がいくつあるかを自動的に決めることも興味あります。これはクラスタリングの応用です。ただこの処理を通じて、意味とは何であるかということが考察できると思っています。
(1.2) キーワード抽出
文書が与えられたときに、その文書のキーワードを抽出するタスクです。古典的なタスクなのですが、Web の文書が増大している現在この技術は本質的に重要です。ですので、対象は Web の文書です。
これも結局、(2)のアプローチで解決します。手法はいろいろ考えることができると思います。キーワードの判定には主観が入るので、正解というものがなく、思いつくものは何でもやれますが、評価が難しくなります。
手法として、個人的にはメタデータ、あるいはその対象文書以外のリソースを活用する方向が面白いと思っています。
(1.3) 用語抽出と意味推定
あまり意識することはないかもしれませんが、現在、いろいろな用語が現れては消えています。 たとえば、偽装建築が社会問題化した当初「ヒューザ」という単語が
Web 上で良く現れました。あの事件を知らない人には「ヒューザ」という単語はまったく意味がわからないと思います。そのような用語をどうやって見つけるか、どうやって意味を推理するか、そういったことに興味があります。
実はこれは(3)とも関連します。このような単語は社会情勢を反映しているからです。このような単語が抽出できれば、何かに活用できると思っています。どうやって意味を推理するかも現状
Web 以外に手がかりはないので、Web 上の情報の利用になると思います。
(2) 機械学習・統計学
(1)や(3)の研究を行う場合、つまり何らかのタスクを工学的に解決しようとした場合、道具が必要です。本研究室で使う道具は、機械学習と統計学です。前述しましたが、自然言語も
Web も自然現象として捉えられます。自然現象である以上、機械学習や統計学の理論が適用でき、タスクを解決できることが期待できます。
ただ注意しないといけないのは、理論だけ勉強すれば、あとは簡単というわけではないということです。
現実のタスクを機械学習や統計学の理論で解決する場合には、対象とするタスクを、その理論が使えるようにように、うまく定式化しないといけません。この定式化自体が難しく、現実的にはそのタスクに精通していないと、うまい定式化はできません。
タスクは単純にして純粋に機械学習や統計学自体を研究するのもありです。
以下はここ数年取り組んでいるテーマです。
(2.1) 半教師有り学習
機械学習とは一般には帰納学習を指します。自然言語処理の分野では、個々のタスクを分類問題に定式化して、帰納学習の手法は用いて解決するというアプローチが大きな成功を納めました。ただし、帰納学習では大量のラベル付きデータを必要とし、そのラベル付けは人間が手作業で行わなくてはならないので、その点で問題があります。半教師有り学習とは少量のラベル付きデータと大量のラベルなしデータを組み合わせて学習するタスクです。
理論的にうまくいく手法であっても、なぜか、実際に応用してみるとうまくいかないので、その原因の究明と改良、という流れで主にやっています。
(2.2) クラスタリング
データをある観点で分類するのがクラスタリングです。自然言語処理では単語や文書などをクラスタリングすることが多いですが、応用は無数にあると思います。
私自身、「知能の本質はクラスタリングの能力」だと予想していますので、クラスタリングの研究は最重要課題と考えています。
近年、教師有りクラスタリングという新しいタイプのクラスタリングのタスクが注目されていて、そこらの研究をやっています。ベースのクラスタリングの手法を、グラフスペクトル理論を用いたクラスタリングや混合分布モデルによるクラスタリングにして、上記の研究をやっています。また近年、ベイズ統計を利用したクラスタリングも提案されていて、そこらもカバーしてゆくつもりです。
(2.3) 能動学習
(2.1) と背景は同じです。帰納学習で使うラベル付きデータは適当に選出されますが、学習が効果的に進むように、ラベルを付けるべきデータをシステムの方から導くのが能動学習です。一般により少ないデータ量で学習ができます。
実は、能動学習自体はあまりやる気はないのですが、(2.2) のクラスタリングと組み合わせることを考えていて、その点で研究しています。
(2.4) ベイジアンネットワーク
確率推論手法の一種です。確率変数をノードとした有向グラフで現象をモデル化し、実データから各ノードの条件付き確率を推定して、与えられたデータから目的の確率変数の分布を推定して、予測を行うという流れです。
個人的には強力な手法の割には、自然言語処理に関しては、画期的な応用例がないように感じます。
うまい応用例を見つけて、ベイジアンネットワークの優秀さを示そうという狙いでやっています。
また数理的にはモデルの構造を調べる部分に興味があって、その辺りにも力を入れるつもりです。
(2.5) 独立成分分析
主成分分析と因子分析の拡張手法で、モデルの構造を分析する理論だと捉えています。ある現象が起こったときに、どのような因子が本質的に関わっているかを分析できます。比較的新しい理論で、ここ10年で随分進歩して、近年非常に注目されています。
とりあえずキャッチアップを目標として勉強しています。具体的な研究テーマは決まっていません。ものにできれば、応用は多いと思います。
(2.6) ベイズ統計
ここ数年でベイズ統計のアプローチを随分見かけるようになりました。今後、学習関係でやっていくためには、この分野を避けては通れないでしょう。まず
LDA, DM, DP と MCMC, 変分ベイズ法をなどをマスターして、その後に具体的な応用を試してみたいと思っています。
(2.5) と (2.6) については、研究者を目指す人は、是非、一緒に勉強しましょう。多分、ものにできればあと5年間位は、このテーマでやっていけると思います。
(3)Web 応用
Web 応用というのは勝手につけた名前です。Web 上のデータを利用して工学的に有益なシステムの開発は、全部この分類としています。あまりに範囲が大きいので、何をやればいいかもよくわかりません。テーマを見つけること自体で研究の半分は終わっているような感じもします。
とりあえず少し長期的にやろうと思っている研究を3つあげます。
ただそれら以外にも、Blog や SNS を利用した何らかの有益なシステムの開発、あるいは既にあるシステムで問題となっていることを解決するような研究も興味あります。評判検索、主観表現の分析、ユーザ嗜好の推定(協調フィルタリング)、などもやれば面白いのかもしれません。ただここらは正直あまり興味ありません。でも、やりたい人がやるのは
OKです。協力します。
(3.1) Web ディレクトリ
昔、インターネットの検索は Yahoo! のディレクトリ型の検索と Google の全文検索というように分類されていました。今はそんな分類する人いませんけど、、。ただディレクトリ型の検索で使われていたディレクトリは今もありますし、いろいろな検索サイトでも独自に作成していて、現実に見ることができます。このディレクトリが
Web ディレクトリです。結局、Web サイトを木構造で分類整理したものです。
Web は巨大なデータベースと見なせます。その際に、Web を整理分類したディレクトリがあれば、Web 全体を俯瞰的に眺めるのに便利です。たとえば、企業のホームページと個人のホームページはどのくらいの割合で存在しているのかなど知りたいと思いませんか?また自然言語処理ではコーパスとして
Web データを使うことがありますが、Web データはコーパスと見なせるのかどうかなど、検証すべきだと思います。上記に限らず、Web ディレクトリを構築できればいろいろな利用方法が可能だと思います。それはWeb
ディレクトリ自体が一種の知識データベースとなっているからです。
研究の方向としては、Web ディレクトリの自動構築、Web ディレクトリの利用、Web ディレクトリを用いた Web データの分析、、、などをやろうと思っています。
(3.2) セマンティックウエブ
セマンティックウエブとは何か? なかなか簡単には説明できません。下手に解説すると「それは違う」とうるさく言う人もいるので、引いてしまいます。しかし、気にしないで、勝手に言えば、コンピュータエージェント(プログラム)が
Web 上の様々なサービスや資源を利用して、ときにはエージェント間で協調して、自動で問題解決すること、、、くらいに捉えておいてよいと思います。
セマンティックウエブ自体が怪しい未来像なので、何を研究するのかも難しいです。思いつくものが簡単にできそうにもないし、何を作れば研究になるのかも不明です。
とりあえず、XML データベース、オントロジーの自動構築あたりから手を出してゆこうと考えています。
(3.3) Web マイニング
Web マイニングという言葉も正確に定義しようとすると面倒なので、私に関係する部分に限って、簡単に言えば、Web から有用な情報を見つけ出すことです。
有用な情報のタイプによって応用は数多くあると思います。
ただ注意として、マイニングの対象はテキストです。Web には、音声、画像、動画などテキスト以外の情報もあり、それらマイニング、あるいはそれらの情報を利用したマイニングも考えられると思いますが、それらはやりません。あくまでテキストを解析してマイニングします。ただし
HTML や XML などのファーマット情報を使うのは有りです。
割と思いつきでできる研究が多数あるので、学部生の研究で使うタスクは、ここらになることも多いと思います。
その他
プログラム言語
私の研究室では、プログラム言語としては、
R, Perl, Java,  C, MySQL, C++, JavaScript, XML, PHP, VB.net, HTML, XSLT, CCS
をマスターしてほしいです(Perl の代わりに、Python や Ruby でもよいです)。順番は重要度の順です。上位5つは必須です。 Lisp か Prolog
もマスターしてほしいですが、使う機会が少ないので、これらは要りません。ただ、使いたい人がいれば使ってよいです。
プログラムは研究を行うための必須道具です。道具が使えないと何もできません。よい道具があると仕事がはかどります。自分の道具はどんどん磨いて、駆使できるようにしてください。
ただし磨いているだけでは本末転倒です。注意してください。
英語
世界がグローバル化して、英語の重要性はますます高くなっています。皆さんも、これからは英語ができないと絶対に不利です。
私は '97年に約3ヶ月、'00年に約2ヶ月、そして'05年に約10ヶ月、New York で暮らしました。通算すると1年以上になります。1年も住んでいれば英語はできるだろうと思われるかもしれませんが、絶対にそんなことはありません。英語をマスターするのは、そんなに甘くはありません。私の英語はまだまだダメです。
私の研究室に入ったら、TOEIC を受けることを必須とします。卒業時には最低 600 点とって下さい。ぺらぺらになる必要はないと思います。ただ英語から逃げて、自分の人生を狭めるようなことをしてはいけません。
私も英語から逃げずに、いつか英語が苦にならなくなることを目指して、練習を続けるつもりです。一緒に練習しましょう。
数学
極論ですが、私は理系の大学で勉強するのは数学だけで十分だと思っています。ある程度数学をやった後に、あとは個々のテーマをやればいいでしょう。数学が苦手だと、結局、理系の分野ではものになりません。教養で習う線形代数、微積、確率統計の3つくらいは、最低できるようになってください。幸い、機械学習ではこの3つがほどよく必要です。
私は高校のときからコンピュータに興味があり、早くから情報の学科に進むことを決めていました。コンピュータに非常に興味がありましたが、研究室は数学の研究室をあえて選びました。それは私が研究者になることを想定していたからではありません。私は企業に入ってシステム開発するつもりでしたから、明らかに数学をやるのは無駄でした。それでも数学の研究室を選んだのは、数学をやっていた方が将来的に役立つと考えたからです。
大学を卒業した直後はコンピュータに接して研究してきた人たちとは差があって、自分の選択が正しかったのかどうか随分疑問でしたが、今は自信を持って、数学をやっていて良かったと言えます。大学で習うコンピュータに関する知識は、5年もたてば役に立たないでしょう。コンピュータに関する知識は、数年、勉強していれば絶対に追いつきます。ただ数学は勉強する機会が少ないので、数学の力の差はなかなか縮まりません。
数学を勉強した方が絶対に得です。理系では数学の力が本質的です。そして数学の知識は一生使えます。
以上です。何か質問あれば、メール下さい。学内の人なら、直接居室に来てくれても良いです。

